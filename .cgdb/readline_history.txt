:l BlackHole.out < Inputs/entrada2.txt
BlackHole.out < Inputs/entrada2.txt
./BlackHole.out < Inputs/entrada2.txt
clean
clear
help
running
help running
q
help
help running
run
1
1 1
1 1 0
1 1 0
1 1 0
s
n
:q
q
y
q
:q
quit
load key_find.c 
quit
break 64
run
s
s
s
s
s
s
s
s
s
s
print head
print head->key
print head->next
print head->prev
quit
n
run
n
:q
quit
y
quit
break 68
run
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print (*head)
print (*head)->key
print (*head)->next
print (*head)->prev
print (*head)->prev->next
s
s
s
s
s
s
s
s
print node->key
print node->next
print node->prev
(0x602260)->key
print node->prev->key
print node->prev->key
(*head)->prev->next->key
print (*head)->prev->next->key
quit
y
break 68
run
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print (*head)->key
print (*head)->next->key
print (*head)->next->next->key
print (*head)->next->prev->key
s
s
s
s
s
s
s
s
s
s
s
s
s
break 35
(*head)->key
print (*head)->key
print (*head)->next->key
print (*head)->next->next->key
print (*head)->next->next->next->key
print (*head)->next->next->next->next->key
r
n
c
s
print (*head)->key
print (*head)->next->key
print (*head)->next->next->key
(*head)->key
print(*head)->key
print (*head)
help
print head
print (&node)
(*(&node))->key
print (*(&node))->key
print (*(&node))->key->next
quit
y
break 43
run
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
break 35
print (*head)->key
print (*node)->key
s
print (*node)->key
print (*node)->key
print (*head)->key
print (*head)->next->key
print (*head)->next->next->key
print (*head)->next->next->next->key
print (*head)->next->next->next->next->key
s
s
print (*head)->key
print (*head)->next->key
print (*head)->next->next->key
print (*head)->next->next->next->key
break 44
c
c
c
s
s
s
s
print (*head)->key
print head->key
print head->next->key
print head->next->next->key
print head->next->next->->nextkey
print head->next->next->next->key
print head->next->next->next->next->key
print head->next->next->next->next->next->key
break 44
break 45
c
c
print head->key
c
c
print head->key
print head->next->key
print head->prev->key
break 50
c
c
print head->key
c
c
print head->key
print head->prev->key
print head->prev->next->next->key
print head->prev->next->next->next->key
print head->prev->next->next->next->next->key
print head->prev->next->next->next->next->next->key
s
s
quit
y
break 43
c
run
break 45
c
print head->next
print head->prev
print head
s
(*head)
print (*head)
print (*head)
print (*head)->prev
s
break 35
c
s
print (*head)
print (*head)->head
print (*head)->next
print (*head)->key
print (*head)->next->key
print (*head)->prev->key
print (*head)->prev->prev->key
quit
y
r
quit
y
quit
b 34
r
s
s
s
s
s
print step
print SIZE
s
s
print l_range
print h_range
s
s
print split_pos
b 106
r
n
c
print l_range
print h_range
s
print array[l_range]
print h_range
s
print split_pos
s
s
print *left
print *right
print array[1]
s
s
s
print left[l_p]
print right[r_p]
s
s
s
s
s
s
s
s
s
s
c
s
print l_range
print h_range
s
s
s
print split_pos
print array[0]
print array[1]
print array[2]
print array[3]
s
s
s
for (int i = 0; i < 4; ++i) print array[i]
print /x array
print /x array[0]
print /x array[1]
print /x array[2]
print array[0]
print array[1]
print array[2]
print array[3]
s
print split_pos 
print l_range 
s
print h_range
print array[0]
print array[1]
print array[2]
print array[3]
print array[4]
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
c
s
print l_range h_range
print l_range; print h_range
print l_range && print h_range
print l_range
print h_range
s
s
s
s
s
s
s
print array[4]
print array[5]
s
s
s
s
s
s
print array[4]
print array[5]
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print l_p
print r_p
print left[l_p]
print right[r_p]
s
s
s
s
s
s
s
s
c
s
print l_range
print h_range
print array[6]
print array[7]
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print l_p
print l_range
print split_pos 
print r_range
print h_range 
print (split_pos - l_range)
print (h_range - split_pos)
quit
y
q
b 105
clear 105
b 106
r
s
s
s
s
s
s
print l_range
c
c
c
c
c
s
print l_range
print h_range
print array[4]
print array[8]
print array[5]
print array[6]
print array[7]
clear
print l_range
print r_range
print h_range 
s
s
s
s
print (split_pos - l_range)
print (h_range - split_pos)
print array[4]
print array[5]
print left[0]
print left[1]
print array[6]
print array[7]
print right[0]
print right[1]
b 117
c
c
print array[4]
print array[5]
print array[6]
print array[7]
rc
s
s
s
s
s
s
clear  117
print l_range
print h_range
print array[0]
print array[1]
print array[2]
print array[3]
print array[4]
print array[5]
print array[6]
print array[7]
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print l_range
print h_range
print array[0]
print array[1]
print array[2]
print array[3]
print array[4]
print array[5]
print array[6]
print array[7]
q
y
b 106
r
c
c
c
s
print l_range
print h_range
c
print l_range
print h_range
s
print l_range
print h_range
c
s
print l_range
print h_range
print array[0]
print array[1]
print array[2]
print array[3]
print array[4]
print array[5]
print array[6]
print array[7]
set $i = $arg0
while $i < $arg1
print array[$i]
set $i = $i + 1
end
end
printArray 4 8
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
printArray 4 8
quit
y
b 87
b 88
b89
b 89
r
q
y
quit
q
quit
q
q
q
quit
q
quit
:set tabstop=2
set tabstop=2
q
quit
b 87
b 88
b89
b 89
r
c
c
c
c
print_array l_rage h_range
print_array array l_rage h_range
print_array array l_range h_range
print l_range
print h_range
c
c
c
c
print l_range
print h_range
c
print l_range
print h_range
print array 0 4
print_array array 0 4
quit
y
b 89
c
r
c
c
c
c
print l_range
print h_range
c
print l_range
print h_range
print_array array 4 8
quit
y
b 89
r
c
c
c
print l_range
print h_range
c
print l_range
print h_range
c
print l_range
print h_range
print_array array 4 8
quit
yes
b 89
c
r
c
c
print l_range
print h_range
print_array array l_range h_range
s
s
s
s
s
s
s
s
s
s
print_array new_array 0 new_array_size 
s
print l_p
print r_p
print_array left 0 left_size
print_array right 0 left_size
q
y
b 89
r
print_array array l_range split_pos
print_array array spli split_pos h_range 
print_array array split_pos h_range 
s
s
s
s
s
s
s
s
print left[0]
print right[0]
s
s
s
s
s
s
s
s
s
s
print left[0]
print right[0]
print right[0+1]
b 77
r
y
print array[0]
s
s
print l_range
print h_range
print_array array l_range h_range
print left[0]
s
s
quit
y
b 77
r
s
s
quit
quit
quit
b 77
b 89
r
s
s
print_array array l_range h_range 
p left[0]
p left[1]
s
p l_range
p h_range
backtrace 
backtrace 
reverse-step
quit
y
