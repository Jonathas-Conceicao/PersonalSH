;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(command-history input-method-history coding-system-history magit-read-file-hist magit-revision-history query-replace-from-to-history yes-or-no-p-history query-replace-history minibuffer-history buffer-name-history file-name-history extended-command-history))
(setq command-history '((execute-extended-command nil "flyspell-correct-word" nil) (execute-extended-command nil "flyspell-correct-word" "flyspell-co") (flyspell-word nil) (execute-extended-command nil "flyspell-word" "flyspell-w") (flyspell-mode 'toggle) (execute-extended-command nil "flyspell-mode" "flyspell-m") (load-file "~/Github/PersonalSH/.emacs.d/init.el") (execute-extended-command nil "load-file" "load-f") (el-get-install "flyspell") (execute-extended-command nil "el-get-install" "el-get-install") (find-file "~/Github/PersonalSH/.emacs.d/init.el" t) (ispell) (execute-extended-command nil "ispell" nil) (ispell) (execute-extended-command nil "ispell" "ispe") (ispell-continue) (execute-extended-command nil "ispell-continue" "ispell-con") (kill-buffer "sbc-template.tex") (find-file "~/Github/Artigos/SBLP_2018_Artigo/../ERAD_2018_Artigo/sbc-template.tex" t) (kill-buffer "Makefile<ERAD_2018_Artigo>") (find-file "~/Github/Artigos/SBLP_2018_Artigo/../ERAD_2018_Artigo/Makefile" t) (kill-buffer "README") (kill-buffer "sample-bibliography-sigchi-a.bib") (kill-buffer "sample-bibliography-biblatex.bib") (kill-buffer "*Buffer List*") (kill-buffer "ring.c") (find-file "~/Github/IPPD/Ring/ring.c" t) (find-file "~/Github/IPPD/Ring" t) (kill-buffer "Process-Ring") (kill-buffer "process_ring.c") (revert-buffer t) (execute-extended-command nil "revert-buffer" "reve-buf") (revert-buffer t) (execute-extended-command nil "revert-buffer" "rev-bu") (kill-buffer "Thread-Ring") (kill-buffer "thread_ring.c") (kill-buffer "Ping-Pong") (kill-buffer "ping_pong.c") (revert-buffer t) (execute-extended-command nil "revert-buffer" "rever-buf") (kill-buffer "ping_pong.c") (c-mode) (execute-extended-command nil "c-mode" "c-mo") (c++-mode) (execute-extended-command nil "c++-mode" "c++") (c-mode) (execute-extended-command nil "c-mode" "c-mo") (tabify 251 995 nil) (execute-extended-command nil "tabify" "tabi") (find-file "~/Github/IPPD/Ping-Pong/ping_pong.c" t) (find-file "~/Github/IPPD/Thread-Ring/thread_ring.c" t) (find-file "~/Github/IPPD/" t) (kill-buffer "IPPD") (kill-buffer ".gitignore")))
(setq coding-system-history '("utf-8"))
(setq magit-read-file-hist '(".emacs.d/init.el"))
(setq magit-revision-history '("master"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes"))
(setq query-replace-history '("Num" "VOID" "INT" "BOOL" "INT" "BOOL" "INT" "E" "Error" "S" "Success" "isFinal" "isFinal[A,B,C]" "Exp" "[A,B,C]Exp" "Exp" "{A, B, C}Exp" "Exp" ".Exp" "stg_ap_v_fast" "a" "Int"))
(setq minibuffer-history '("flyspell" "gdscript-mode" "go-mode" "markdown-preview-mode" "brazilian" "auto-complete" "popup" "auto-complete" "go-mode" "auto-complete" "git-gutter" "powerline" "express.aoD" "express.o" "git-gutter" "magit" "powerline" "auto-complete" "/bin/bash" "wakatime-api-key" "markdown-mode" "wakatime-mode"))
(setq buffer-name-history '("sbc-template.tex" "Makefile<ERAD_2018_Artigo>" "README" "sample-bibliography-sigchi-a.bib" "sample-bibliography-biblatex.bib" "*Buffer List*" "ring.c" "Process-Ring" "process_ring.c" "Thread-Ring" "thread_ring.c" "Ping-Pong" "ping_pong.c" "IPPD" ".gitignore" "README.md" "TODO-code.md" "player.gd" "init.el" "*Packages*" "*Buffer List*" "Questionário.md" "README<tl2-x86-0.9.0>" "Makefile.common" "PBD_20171-DEFAULT.png" ".gitignore" ".loaddefs.el" "*scratch*" "SemanticaFormal" "*GNU Emacs*" "*Completions*" "*GNU Emacs*" "*Messages*" "*scratch*" "rts" "STM.c" "README.md" "stm" "libraries" "utils" "ghc" "includes" "rts<includes>" "storage" "Closures.h" "*Buffer List*" "PrimOps.cmm" "MainT.hs" "deriveConstants" "DeriveConstants.hs" "*GNU Emacs*" "*Messages*" "*Buffer List*" "Tipo.hs" "*scratch*" "trab1-small-step" "SmallStep.hs" ".gitignore" "*GNU Emacs*" "*Messages*" "*scratch*" "trab1-small-step" "*Buffer List*" "SmallStep.hs" "Tipo.hs" "*terminal*" "jonathas.hs" "Tipo.hs" "*terminal*" "SmallStep.hs" "*terminal*" "*Buffer List*" "trab1-small-step" "SemanticaFormal" "Github" "Artigos" "README.md" "*markdown-output*" "*el-get packages*"))
(setq file-name-history '("~/Github/PersonalSH/.emacs.d/init.el" "~/Github/Artigos/SBLP_2018_Artigo/../ERAD_2018_Artigo/sbc-template.tex" "~/Github/Artigos/SBLP_2018_Artigo/../ERAD_2018_Artigo/Makefile" "~/Github/IPPD/Ring/ring.c" "~/Github/IPPD/Ring" "~/Github/IPPD/Ping-Pong/ping_pong.c" "~/Github/IPPD/Thread-Ring/thread_ring.c" "~/Github/IPPD/" "~/Workspace/studing-ghc/README.md" "~/Github/PeC-Jogos-Projeto-1/StoryBoardNotes.md" "~/Github/PeC-Jogos-Projeto-1/src/player.gd" "~/Github/PersonalSH/.emacs.d/init.el" "~/Github/EngenhariaDeSoftware1/Questionário.md" "~/Github/PersonalSH/.emacs.d/init.el" "~/Github/PersonalSH/.gitignore" "~/Github/PersonalSH/.emacs.d/" "~/Github/PersonalSH/.emacs.d/init.el" "/tmp/entrada.txt" "~/Workspace/studing-ghc/testCases/FixedTests/UniqueID/MainT.hs" "~/Workspace/studing-ghc/README.md" "~/Workspace/ghc/" "~/Github/PersonalSH/.gitignore" "/tmp/jonathas.hs" "~/Github/SemanticaFormal/trab1-small-step/Tipo.hs" "~/Github/SemanticaFormal/trab1-small-step/" "~/.emacs.d/init.el" "~/.emacs.d/el-get/" "~/.emacs.d/" "~/.emacs.d/init.el"))
(setq extended-command-history '("flyspell-correct-word" "flyspell-word" "flyspell-mode" "load-file" "el-get-install" "ispell" "ispell-continue" "revert-buffer" "c-mode" "c++-mode" "c-mode" "tabify" "ispell-continue" "ispell" "set-keyboard-coding-system" "revert-buffer" "gdscript-mode" "revert-buffer" "package-install" "list-packages" "el-get-list-packages" "el-get-install" "revert-buffer" "go-mode" "el-get-reinstall" "go-mode" "kill-buffer" "markdown-mode" "markdown-preview-mode" "el-get-install" "ispell" "markdown-preview" "ispell" "ispell-change-dictionary" "ispell" "markdown-mode" "el-get-list-packages" "el-get-install" "el-get-reinstall" "global-git-gutter-mode" "powerline-default-theme" "load-file" "el-get-reinstall" "load-file" "el-get-reinstall" "el-get-install" "search-backward-regexp" "search-forward-regexp" "top-level" "end-of-buffer" "git-gutter-mode" "git-gutter:revert-hunk" "end-of-buffer" "global-git-gutter-mode" "el-get-install" "el-get-remove" "load-file" "end-of-buffer" "load-file" "magit-file-checkout" "global-whitespace-mode" "magit-file-checkout" "magit-status" "global-whitespace-mode" "magit-status" "magit-version" "el-get-install" "powerline-default-theme" "powerline-nano-theme" "powerline-vim-theme" "powerline-center-evil-theme" "powerline-default-theme" "powerline-center-theme" "powerline-default-theme" "el-get-install" "load-file" "el-get-install" "end-of-buffer" "revert-buffer" "replace-regexp" "revert-buffer" "c-mode" "buffer-menu" "term" "upcase-region" "load-file" "customize-set-variable" "global-wakatime-mode" "markdown-preview" "markdown-mode" "el-get-install" "el-get-list-packages" "load-file" "eval-buffer"))
